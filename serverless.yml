service: eventdriven-dataflow

frameworkVersion: '4'

provider:
  name: aws
  runtime: python3.11
  memorySize: 512 # optional, in MB
  timeout: 10 # optional, in seconds
  ecr:
    images:
      etl:
        path: ./etl
      ml:
        path: ./ml
      s3_reactive_flow:
        path: ./s3_reactive_flow

  environment:
    PREFECT_HOME: /tmp/.prefect
    PREFECT_API_KEY: prefectapikey
    PREFECT_API_URL: 'https://api.prefect.cloud/api/accounts/5a36067c-f152-4310-bbd9-426b54b365a2/workspaces/2f1757d0-5c92-4b1f-8fe1-d38d653fa490'

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - athena:*
            - glue:*
            - s3:*
          Resource: "*"

functions:
  etl:
    image:
      name: etl
    events:
      - schedule: rate(60 minutes)

  ml:
    image:
      name: ml
    events:
      - schedule: rate(15 minutes)

  s3_reactive_flow:
    image:
      name: s3_reactive_flow
    events:
      - s3:
          bucket: prefectdata
          event: s3:ObjectCreated:*
          rules:
            - prefix: timeseries/
            - suffix: .snappy.parquet
          existing: true

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: prefectdata
        NotificationConfiguration:
          LambdaConfigurations:
            - Event: s3:ObjectCreated:*
              Filter:
                S3Key:
                  Rules:
                    - Name: prefix
                      Value: "timeseries/"
                    - Name: suffix
                      Value: ".snappy.parquet"
              Function: !GetAtt S3ReactiveFlowLambdaFunction.Arn

    LambdaInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !GetAtt S3ReactiveFlowLambdaFunction.Arn
        Action: lambda:InvokeFunction
        Principal: s3.amazonaws.com
        SourceArn: !Sub arn:aws:s3:::prefectdata
